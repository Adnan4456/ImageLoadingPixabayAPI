// Generated by Dagger (https://dagger.dev).
package com.example.codingtask.data.local.repository;

import com.example.codingtask.data.local.db.PixabayDb;
import com.example.codingtask.data.remote.PixabayApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PixabayRepository_Factory implements Factory<PixabayRepository> {
  private final Provider<PixabayApi> pixabayApiProvider;

  private final Provider<PixabayDb> pixabayDatabaseProvider;

  public PixabayRepository_Factory(Provider<PixabayApi> pixabayApiProvider,
      Provider<PixabayDb> pixabayDatabaseProvider) {
    this.pixabayApiProvider = pixabayApiProvider;
    this.pixabayDatabaseProvider = pixabayDatabaseProvider;
  }

  @Override
  public PixabayRepository get() {
    return newInstance(pixabayApiProvider.get(), pixabayDatabaseProvider.get());
  }

  public static PixabayRepository_Factory create(Provider<PixabayApi> pixabayApiProvider,
      Provider<PixabayDb> pixabayDatabaseProvider) {
    return new PixabayRepository_Factory(pixabayApiProvider, pixabayDatabaseProvider);
  }

  public static PixabayRepository newInstance(PixabayApi pixabayApi, PixabayDb pixabayDatabase) {
    return new PixabayRepository(pixabayApi, pixabayDatabase);
  }
}
