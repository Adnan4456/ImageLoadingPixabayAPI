// Generated by Dagger (https://dagger.dev).
package com.example.codingtask.ui.viewmodels;

import com.example.codingtask.data.local.db.PixabayDb;
import com.example.codingtask.data.remote.PixabayApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<PixabayDb> dbProvider;

  private final Provider<PixabayApi> apiServiceProvider;

  public MainViewModel_Factory(Provider<PixabayDb> dbProvider,
      Provider<PixabayApi> apiServiceProvider) {
    this.dbProvider = dbProvider;
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(dbProvider.get(), apiServiceProvider.get());
  }

  public static MainViewModel_Factory create(Provider<PixabayDb> dbProvider,
      Provider<PixabayApi> apiServiceProvider) {
    return new MainViewModel_Factory(dbProvider, apiServiceProvider);
  }

  public static MainViewModel newInstance(PixabayDb db, PixabayApi apiService) {
    return new MainViewModel(db, apiService);
  }
}
