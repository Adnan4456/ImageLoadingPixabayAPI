// Generated by Dagger (https://dagger.dev).
package com.example.codingtask.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesHttpLoggingInterceptorFactory implements Factory<OkHttpClient> {
  @Override
  public OkHttpClient get() {
    return providesHttpLoggingInterceptor();
  }

  public static NetworkModule_ProvidesHttpLoggingInterceptorFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static OkHttpClient providesHttpLoggingInterceptor() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providesHttpLoggingInterceptor());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvidesHttpLoggingInterceptorFactory INSTANCE = new NetworkModule_ProvidesHttpLoggingInterceptorFactory();
  }
}
